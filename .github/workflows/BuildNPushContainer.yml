name: Reusable Build & Push

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      dockerfile_path:
        type: string
        default: "./Dockerfile"
      working_directory_path:
        type: string
        default: "."
      ecr_repository:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: log inputs
        run: |
          echo "-------------- inputs --------------"
          echo git ref: $GITHUB_REF
          echo git commit hash: $GITHUB_SHA
          echo github.run_id: ${{ github.run_id }}
          echo github.run_number: ${{ github.run_number }}
          echo dockerfile path: ${{ inputs.dockerfile_path }}
          echo working directory path: ${{ inputs.working_directory_path }}
          echo ecr repository: ${{ inputs.ecr_repository }}
          
      - uses: actions/checkout@v3
      - name: Add "GitHub Packages" NuGet Source
        run: |
            dotnet nuget add source https://nuget.pkg.github.com/365Scores/index.json \
              -n github \
              -u ${{ secrets.PACKAGES_USERNAME }} \
              -p ${{ secrets.PACKAGES_PAT }} \
              --store-password-in-clear-text
              
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
            
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}          
          IMAGE_TAG: ${{ github.run_id }}
        run: |           
          echo dockerfile path: ${{ inputs.dockerfile_path }}
          docker build -t $ECR_REGISTRY/${{ inputs.ecr_repository }}:$IMAGE_TAG --build-arg nuget_username=${{ secrets.PACKAGES_USERNAME }} --build-arg nuget_password=${{ secrets.PACKAGES_PAT }} -f "${{ env.dockerfile_path }}" "${{ env.working_directory_path }}"
          docker push $ECR_REGISTRY/${{ inputs.ecr_repository }}:$IMAGE_TAG
